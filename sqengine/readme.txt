Title: Squirrel組み込みエンジンサンプル
Author: 渡邊剛(go@wamsoft.jp)
Date: 2010/2/23

●これはなに？

Squirrel (http://squirrel-lang.org/) を組み込んだ
ゲームエンジンの概念サンプルコードです

Squirrel は組み込み用オブジェクト指向言語です。
文法的には C 言語風で、クロージャや協調スレッド（コルーチン）を
サポートしており、スクリプトの実行処理を任意のタイミングで中断
できるため、シーン遷移などの制御ロジックを組むのに適しています。

このサンプルエンジンでは描画系など、必要なモジュールを C++ 
で書き起こし、それの制御を squirrelスクリプトにまかせる
スタイルでくんであります。

スクリプトは、全てコルーチン状態で実行されるため、任意の
タイミングで中断可能で、中断したタイミングで画面描画や
エンジン側のイベント処理が行われることになります。
メインループ的構造を自由に配置可能なのがコルーチン制御の特徴です

●システム概要

・言語環境

　デフォルトは unicode 版でコンパイルしてあります。
　日本語を使う場合は BOMつきUTF-8 か UCSを使う必要があります

・エンジン構造

 Direct3D ベースで Window 1つ前提で構築してあります
 サンプルとして以下の基本オブジェクトが使えます

  GamePad  上下左右カーソル + ENTER/ESC のみ対応した操作系
　GameRect 矩形描画用オブジェクト

 またログ表示のためコンソールを強制で開いてます。

・変数空間

  squirrel のグローバル空間は１つだけ存在します。
　Squirrel 用のスクリプトの実行はこのグローバル空間上でおこなわれ、
　定義されたファンクションやクラスもこのグローバル空間に登録されていきます。

・疑似スレッド処理

  squirrelによる複数のスレッドの並列実行処理が実装されています。
  このために利用できる内部クラス Object / Thread が定義されています。
  詳細は squirrel/sqobject/manual.nut を参照してください。

・スクリプト実行

　起動時にカレントにある init.nut を読み込んで実行します。
  ウインドウを強制で閉じることでシステムの実行を終了します。

●拡張ポイント

・時間経過処理を独自実装

　このサンプルでは実時間を ms 単位で測定して、それを sqthread の
　動作の基準時間としてあります。

　フレーム単位動作にしたい場合は、メインループ中の

  GameObject::updateTick(diff);

　の部分の、diff を 1 で固定します。あわせて sqobject の wait() での
　待ち時間指定などの単位もかわるので注意が必要です。

・ログ出力処理を独自実装

  print() の結果やエラー表示の出力は、sq_setprintfunc() で
　登録された出力先ファンクションに対して行われます。
　この部分を自前のエンジンのログ処理や、コンソール処理に
　あわせて実装します

・ファイル読み込み処理を独自実装

  sqobject::Thread は、fork() などのスクリプトファイルの読み込みには
　以下の非同期ファイル読み込みメソッドを呼び出しています。
　これを自分のエンジンにあわせて実装しなおします。

-----------------------------------------------------------------------------
void *sqobjOpenFile(const SQChar *filename, bool binary);
bool sqobjCheckFile(void *handler, const char **dataAddr, int *dataSize);
void sqobjCloseFile(void *handler)
-----------------------------------------------------------------------------

　デフォルトの実装は sqobject/sqfile.cpp で、sqstdio を使って実装してます
　※sqstdio は内部的には stdio を使ってます

・独自クラスを作成して squirrel にバインド

  sqobject::Object を継承しておくとなにかと便利ですが、
　それ自体は必須ではありません。独自の方式、独自のバインダで登録可能です。

  このサンプルではバインドに sqrat を使ってます。
  sqobject 部のバインド例はほかに以下のものがあるので参考にしてください。

　　自前登録版: sqfunc.cpp

  ※sqobject 機能は、生成時に Object::initSelf(), 
　　破棄時に Object::destructor() を呼ばないとマニュアル通りの
　　機能は動作しなくなってしまうのでご注意ください。

  GameObject は、sqobject::Object を継承した上で、
　ゲームで典型的なタスクスタイルの処理を実装してあります。
　(スクリプト実行の前後でオブジェクト総なめで状態更新メソッドが走ります)

・その他参考

  sqobject::Object には、C++ からバインドされている squirrel オブジェクトの
　メンバを呼び出すための callEvent() があります。
　エンジン側で状態更新時にイベントをおこすのに便利です。

　sqobject 拡張の細かい機能については、
  sqobject/readme.txt と sqobject/manual.nut を
　参照してください。

●ライセンス

squirrel 同様 zlibライセンスに従って利用してください。

/*
 * copyright (c)2010 Go Watanabe go@wamsoft.jp
 * zlib license
 */
